# Generated by Django 4.0.5 on 2025-10-09 00:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import national_park_explorer.models
import pgvector.django.vector
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=120)),
                ('last_name', models.CharField(blank=True, max_length=120)),
                ('birthdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Unnamed Activity', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line1', models.CharField(max_length=255)),
                ('line2', models.CharField(blank=True, max_length=255, null=True)),
                ('line3', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('stateCode', models.CharField(max_length=10)),
                ('countryCode', models.CharField(max_length=10)),
                ('provinceTerritoryCode', models.CharField(blank=True, max_length=10, null=True)),
                ('postalCode', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('alert_id', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('park_code', models.CharField(max_length=20)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('raw_data', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Campground',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('campground_id', models.CharField(max_length=100, unique=True)),
                ('park_code', models.CharField(db_index=True, max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_description', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_description', models.CharField(blank=True, max_length=255, null=True)),
                ('directions_overview', models.TextField(blank=True, null=True)),
                ('directions_url', models.URLField(blank=True, null=True)),
                ('cell_phone_info', models.CharField(blank=True, max_length=255, null=True)),
                ('internet_info', models.CharField(blank=True, max_length=255, null=True)),
                ('wheelchair_access', models.CharField(blank=True, max_length=255, null=True)),
                ('fire_stove_policy', models.TextField(blank=True, null=True)),
                ('rv_allowed', models.BooleanField(default=False)),
                ('rv_info', models.TextField(blank=True, null=True)),
                ('rv_max_length', models.IntegerField(blank=True, null=True)),
                ('trailer_allowed', models.BooleanField(default=False)),
                ('trailer_max_length', models.IntegerField(blank=True, null=True)),
                ('raw_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailAddress', models.EmailField(max_length=254)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EntranceFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField()),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EntrancePass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('description', models.TextField()),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ExceptionHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('sunday', models.CharField(max_length=100)),
                ('monday', models.CharField(max_length=100)),
                ('tuesday', models.CharField(max_length=100)),
                ('wednesday', models.CharField(max_length=100)),
                ('thursday', models.CharField(max_length=100)),
                ('friday', models.CharField(max_length=100)),
                ('saturday', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Gpx_Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Unnamed Activity', max_length=255, null=True)),
                ('sport', models.CharField(max_length=50)),
                ('bounds', models.JSONField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('total_elapsed_time', models.FloatField()),
                ('total_distance', models.FloatField(blank=True, null=True)),
                ('total_calories', models.IntegerField(blank=True, null=True)),
                ('total_ascent', models.FloatField(blank=True, null=True)),
                ('total_descent', models.FloatField(blank=True, null=True)),
                ('avg_heart_rate', models.IntegerField(blank=True, null=True)),
                ('avg_cadence', models.IntegerField(blank=True, null=True)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'activity',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Multimedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('multimedia_id', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='OperatingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('parkCode', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('fullName', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('directionsInfo', models.TextField(blank=True, null=True)),
                ('directionsUrl', models.URLField(blank=True, null=True)),
                ('latLong', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('states', models.CharField(max_length=100)),
                ('url', models.URLField(blank=True, null=True)),
                ('weatherInfo', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParkImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('altText', models.CharField(blank=True, max_length=255)),
                ('caption', models.TextField(blank=True)),
                ('credit', models.CharField(blank=True, max_length=255)),
                ('image_original', models.ImageField(blank=True, null=True, upload_to=national_park_explorer.models.upload_path_original)),
                ('image_thumbnail', models.ImageField(blank=True, null=True, upload_to=national_park_explorer.models.upload_path_thumbnail)),
                ('image_small', models.ImageField(blank=True, null=True, upload_to=national_park_explorer.models.upload_path_small)),
                ('image_medium', models.ImageField(blank=True, null=True, upload_to=national_park_explorer.models.upload_path_medium)),
                ('image_large', models.ImageField(blank=True, null=True, upload_to=national_park_explorer.models.upload_path_large)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNumber', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('extension', models.CharField(blank=True, max_length=10, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('position_lat', models.FloatField(blank=True, null=True)),
                ('position_long', models.FloatField(blank=True, null=True)),
                ('altitude', models.FloatField(blank=True, null=True)),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('cadence', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('temperature', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='StandardHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sunday', models.CharField(max_length=100)),
                ('monday', models.CharField(max_length=100)),
                ('tuesday', models.CharField(max_length=100)),
                ('wednesday', models.CharField(max_length=100)),
                ('thursday', models.CharField(max_length=100)),
                ('friday', models.CharField(max_length=100)),
                ('saturday', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('success', models.BooleanField(default=False)),
                ('error_summary', models.TextField(blank=True)),
                ('parks_processed', models.PositiveIntegerField(default=0)),
                ('parks_failed', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TextChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('alert', 'Alert'), ('campground', 'Campground')], max_length=20)),
                ('source_uuid', models.UUIDField(blank=True, null=True)),
                ('chunk_index', models.IntegerField()),
                ('chunk_text', models.TextField()),
                ('embedding', pgvector.django.vector.VectorField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Visited',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('park', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='national_park_explorer.park')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=national_park_explorer.models.generate_filepath, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['gpx', 'fit', 'GPX', 'FIT'], message='Invalid file type.')])),
                ('original_filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(choices=[('.fit', '.FIT'), ('.gpx', '.GPX')], max_length=10)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('parse_error', models.TextField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('parsed', 'Parsed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('activity', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='national_park_explorer.gpx_activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='textchunk',
            index=models.Index(fields=['source_type', 'source_uuid'], name='national_pa_source__7ad41a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='textchunk',
            unique_together={('source_type', 'source_uuid', 'chunk_index')},
        ),
        migrations.AddField(
            model_name='standardhours',
            name='operating_hours',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard_hours', to='national_park_explorer.operatinghours'),
        ),
        migrations.AddField(
            model_name='record',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='national_park_explorer.gpx_activity'),
        ),
        migrations.AddField(
            model_name='phonenumber',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='parkimage',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='park',
            name='activities',
            field=models.ManyToManyField(related_name='parks', to='national_park_explorer.activity'),
        ),
        migrations.AddField(
            model_name='park',
            name='topics',
            field=models.ManyToManyField(related_name='parks', to='national_park_explorer.topic'),
        ),
        migrations.AddField(
            model_name='operatinghours',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_hours', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='multimedia',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multimedia', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='gpx_activity',
            name='user',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favorite',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exceptionhours',
            name='operating_hours',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='national_park_explorer.operatinghours'),
        ),
        migrations.AddField(
            model_name='entrancepass',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrance_passes', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='entrancefee',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrance_fees', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='emailaddress',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_addresses', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='address',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='national_park_explorer.park'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
